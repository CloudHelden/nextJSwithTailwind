version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: mein-blog-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      # Optional: Set authentication (uncomment if needed)
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secretpassword
      MONGO_INITDB_DATABASE: mein-blog
    volumes:
      # Persist data between container restarts
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      # Optional: Initialize database with seed data
      # - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Optional: MongoDB Express - Web-based MongoDB admin interface
  mongo-express:
    image: mongo-express:1.0.2
    container_name: mein-blog-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://admin:secretpassword@mongodb:27017/
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH: false
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: secretpassword
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
      # ME_CONFIG_BASICAUTH_USERNAME: admin
      # ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongodb
    networks:
      - app-network

volumes:
  mongodb_data:
    name: mein-blog-mongodb-data
  mongodb_config:
    name: mein-blog-mongodb-config

networks:
  app-network:
    driver: bridge
    name: mein-blog-network